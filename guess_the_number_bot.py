import telebot
import random
from time import sleep
from config import is_admin, ADMIN_USER, TELEGRAM_TOKEN
from telebot import types

bot = telebot.TeleBot(TELEGRAM_TOKEN)

#---------–ì–ª–∞–≤–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ--------
VERSION = '1.3'
error = True
active_game = False
events = [ 
        "–¢—ã –Ω–∞—à—ë–ª —Å–≤–µ—Ç—è—â—É—é—Å—è —Ç—ã–∫–≤—É üéÉ",
        "–ü—Ä–∏–∑—Ä–∞–∫ –ø—Ä–æ—à—ë–ª —Å–∫–≤–æ–∑—å —Ç–µ–±—è üëª",
        "–¢–µ–±—è —É–∫—É—Å–∏–ª –∑–æ–º–±–∏ üßü",
        "–í–µ–¥—å–º–∞ —É–≥–æ—Å—Ç–∏–ª–∞ –∑–µ–ª—å–µ–º üíÄ",
        "–¢—ã —Å–±–µ–∂–∞–ª –æ—Ç —á—ë—Ä–Ω–æ–π –∫–æ—à–∫–∏ üêà‚Äç‚¨õ",
        "–¢—ã —É—Å–ª—ã—à–∞–ª —à—ë–ø–æ—Ç –∏–∑ —Ç–µ–º–Ω–æ—Ç—ã üò±",
        "–¢—ã –ø–æ–ª—É—á–∏–ª –ø–æ–¥–∞—Ä–æ–∫ –æ—Ç —Å–∫–µ–ª–µ—Ç–∞ ‚ò†Ô∏è",
        "–¢—ã –ø–æ–π–º–∞–ª –ª–µ—Ç—É—á—É—é –º—ã—à—å ü¶á"]
nasty = ["üòù–ì–∞–¥–æ—Å—Ç—å", "üç¨–°–ª–∞–¥–æ—Å—Ç—å"]
hearts = 5
x = 10

def hallowen(message):
    markup = types.InlineKeyboardMarkup(row_width=2)
    tp1 = types.InlineKeyboardButton('üé°–ö–æ–ª–µ—Å–æ —É–∂–∞—Å–æ–≤', callback_data='btn1')
    tp2 = types.InlineKeyboardButton('üç¨–°–ª–∞–¥–æ—Å—Ç—å –∏–ª–∏ –≥–∞–¥–æ—Å—Ç—å', callback_data='btn2')
    markup.add(tp1, tp2)
    bot.send_message(message.chat.id, f'–í–æ—Ç –≤—Å–µ –∏–≥—Ä—ã –Ω–∞ –•—ç–ª–ª—É–∏–Ω', reply_markup=markup)

def complet_games(message):
    markup = types.InlineKeyboardMarkup(row_width=2)
    btn1 = types.InlineKeyboardButton('üé°–ö–æ–ª–µ—Å–æ —É–∂–∞—Å–æ–≤', callback_data='btn1')
    btn2 = types.InlineKeyboardButton('üç¨–°–ª–∞–¥–æ—Å—Ç—å –∏–ª–∏ –≥–∞–¥–æ—Å—Ç—å', callback_data='btn2')
    btn3 = types.InlineKeyboardButton('–û—Ç–≥–æ–¥–∞–π —á–∏—Å–ª–æ', callback_data='btn3')
    markup.add(btn1, btn2, btn3)
    bot.send_message(message.chat.id, '‚úÖ –ò–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ ! –í—ã–±–µ—Ä–µ—Ç–µ –∫–æ–º–∞–Ω–¥—É üëá', reply_markup=markup)

@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(message.chat.id, '‚ùå–£ –±–æ—Ç–∞ –≤–µ–¥—É—Ç—Å—è —Ç–µ—Ö.—Ä–∞–±–æ—Ç—ã –Ω–µ –æ—Ç–≤–ª–µ–∫–∞–π—Ç–µ –Ω–∞—Å. –ù–∞–º –∂–∞–ª—å –≤—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–∞ –∫–∞–Ω–µ–ª–µ: https://t.me/+xtbO7MiUA180NzYy')
    msg = bot.send_message(message.chat.id, 'OpenbotAI')
    sleep(1)
    bot.edit_message_text(f'–ü—Ä–∏–≤–µ—Ç {message.from_user.first_name}. \n–ì–æ—Ç–æ–≤ –ø–æ–±–µ–∂–¥–∞—Ç—å –¢—å–º—É ! –ï—Å–ª–∏ –¥–∞ —Ç–æ –Ω–∞–ø–∏—à–∏ /games', message_id=msg.message_id, chat_id=message.chat.id)
   
#---------------–ú–µ–Ω—é –∏–≥—Ä-----------------
@bot.message_handler(commands=['halloween'])
def bot_commads_user(message):
    hallowen(message)

@bot.message_handler(commands=['games'])
def menu_games(message):
    if not error:
     bot.send_message(message.chat.id, '‚ùå–£ –±–æ—Ç–∞ –≤–µ–¥—É—Ç—Å—è —Ç–µ—Ö.—Ä–∞–±–æ—Ç—ã –Ω–µ –æ—Ç–≤–ª–µ–∫–∞–π—Ç–µ –Ω–∞—Å. –ù–∞–º –∂–∞–ª—å –≤—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–∞ –∫–∞–Ω–µ–ª–µ: https://t.me/+xtbO7MiUA180NzYy')
    else:
        markup = types.InlineKeyboardMarkup(row_width=2)
        btn1 = types.InlineKeyboardButton('üé°–ö–æ–ª–µ—Å–æ —É–∂–∞—Å–æ–≤', callback_data='btn1')
        btn2 = types.InlineKeyboardButton('üç¨–°–ª–∞–¥–æ—Å—Ç—å –∏–ª–∏ –≥–∞–¥–æ—Å—Ç—å', callback_data='btn2')
        btn3 = types.InlineKeyboardButton('–û—Ç–≥–æ–¥–∞–π —á–∏—Å–ª–æ', callback_data='btn3')
        markup.add(btn1, btn2, btn3)
        bot.send_message(message.chat.id, '–ú–µ–Ω—é –∏–≥—Ä –æ—Ç–∫—Ä—ã—Ç–æ !', reply_markup=markup)

@bot.callback_query_handler(func=lambda m: True)
def callback(call):
    if call.data == 'btn1':
        num = random.choice(events)
        bot.send_message(call.message.chat.id, f'üé°*–ö–æ–ª–µ—Å–æ –∫—Ä—É—Ç–∏—Ç—å—Å—è...*\n\n {num}', parse_mode="Markdown")
        sleep(1)
        bot.answer_callback_query(call.id)
        complet_games(call.message)

    elif call.data == 'btn2':
        num = random.choice(nasty)
        bot.send_message(call.message.chat.id, f'–¢–µ–±–µ –≤—ã–ø–æ–¥–∞–µ—Ç: {num}')
        sleep(1)
        bot.answer_callback_query(call.id)
        complet_games(call.message)

    elif call.data == 'sistem1':
        error = False
        bot.send_message(call.message.chat.id, f'–ë–æ—Ç –ø–µ—Ä–µ–≤–µ–¥–µ–Ω–Ω –≤ —Ç–µ—Ö.—Ä–∞–±–æ—Ç—ã')

    elif call.data == 'btn3':
        global active_game
        active_game = True
        bot.send_message(call.message.chat.id, f'üï∑–ò–≥—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å! –Ø –∑–∞–≥–∞–¥–∞–ª —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ {x} \n –£ —Ç–µ–±—è –µ—Å—Ç—å 5 –∂–∏–∑–Ω–µ–π !')

@bot.message_handler(commands=['sistem'])
def sistem(message):
    if not is_admin (message):
        markup = types.InlineKeyboardMarkup(row_width=2)
        num1 = types.InlineKeyboardButton('–û—Ç–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ —Ç–µ—Ö—Ä–∞–±–æ—Ç—ã', callback_data='sistem1')
        markup.add(num1)
        bot.message_message(message.chat.id, f'–í—ã–±–∏—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:', reply_markup=markup)
    else:
        bot.send_message(message.chat.id, '‚ùå–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –≤–∞–º –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞ !')

@bot.message_handler(commands=['help'])
def info_bot(message):
    if not error(message): 
        bot.reply_to(message, '‚ùå–£ –±–æ—Ç–∞ –≤–µ–¥—É—Ç—Å—è —Ç–µ—Ö.—Ä–∞–±–æ—Ç—ã –Ω–µ –æ—Ç–≤–ª–µ–∫–∞–π—Ç–µ –Ω–∞—Å. –ù–∞–º –∂–∞–ª—å –≤—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–∞ –∫–∞–Ω–µ–ª–µ: https://t.me/+xtbO7MiUA180NzYy')
    else:
        bot.send_message(message.chat.id, '–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ /start, /games, /help, /helloween')

@bot.message_handler(commands=['info'])
def info_bot(message):
    if not is_admin(message): 
        bot.reply_to(message, '‚ùå–£ –±–æ—Ç–∞ –≤–µ–¥—É—Ç—Å—è —Ç–µ—Ö.—Ä–∞–±–æ—Ç—ã –Ω–µ –æ—Ç–≤–ª–µ–∫–∞–π—Ç–µ –Ω–∞—Å. –ù–∞–º –∂–∞–ª—å –≤—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–∞ –∫–∞–Ω–µ–ª–µ: https://t.me/+xtbO7MiUA180NzYy')
    else:
        bot.send_message(message.chat.id, f'–ë–æ—Ç c–¥–µ–ª–∞–Ω –∫–æ–º–∞–Ω–∏—è–º–∏: OpenbotAI –∏ VECTORBOT \n–ù–æ –±–æ–ª—å—à—É—é —á–∞—Ç—å –≤—ã–ø–æ–ª–Ω–∏–ª–∞ –∫–æ–º–∞–Ω–∏—è: OpenbotAI \n–ß—Ç–æ –µ—Å—Ç—å –ø—Ä–∏–∫–æ–ª—å–Ω–æ–≥–æ, –∫–æ–º–∞–Ω–¥–∞ /halloween. \n–í–µ—Ä—Å–∏—è –±–æ—Ç–∞: {VERSION}')


@bot.message_handler(func=lambda message: True)
def message_bot_int(message):
    global hearts, active_game, x
    if not active_game: 
        return
    
    try:
        guess = int(message.text)

        if 1 <= guess <= x:
            secret = random.randint(1, x)
            if guess == secret:
                bot.reply_to(message, f'üéâ–¢—ã –ø–æ–±–µ–¥–∏–ª —Ç—å–º—É –∏ —É–≥–æ–¥–∞–ª —á–∏—Å–ª–æ {secret}')
                active_game = False
                sleep(1)
                complet_games(message)
            else:
                hearts -= 1
                if hearts == 0:
                    bot.reply_to(message, f'üíÄ –¢—ã –ø—Ä–æ–∏–≥—Ä–∞–ª.... –¢—å–º–∞ –ø–æ–≥–ª–æ—Ç–∏–ª–∞ —Ç–µ–±—è !\n —á–∏—Å–ª–æ {secret}. \n –ï—Å–ª–∏ —Ö–æ—á–µ—à—å –æ—Ç–æ–º—Å—Ç–∏ —Å—É–¥—å–±–µ ? –ù–∞–ø–∏—à–∏ /games')
                    sleep(1)                    
                    complet_games(message)
                    hearts = 5
                    active_game = False
                else:
                 bot.reply_to(message, f'üíÄ–û—Å—Ç–∞–ª–æ—Å—å –∂–∏–∑–Ω–µ–π: {hearts}')
        else:
            bot.reply_to(message, f'ü¶á–ß–∏—Å–ª–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 1 –¥–æ {x}')

    except ValueError:
         bot.reply_to(message, "üëª –≠—Ç–æ –Ω–µ —á–∏—Å–ª–æ... –ü—Ä–∏–∑—Ä–∞–∫–∏ –Ω–µ –ø–æ–Ω–∏–º–∞—é—Ç —Å–ª–æ–≤ !'")



print('–ë–æ—Ç —É–≥–æ–¥–∞–π —á–∏—Å–ª–æ –∑–∞–ø—É—â–µ–Ω!')
bot.polling(non_stop=True)